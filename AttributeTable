<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ArcGIS Experience Builder Search Widget</title>
    <link rel="stylesheet" href="https://js.arcgis.com/4.25/esri/themes/light/main.css">
    <script src="https://js.arcgis.com/4.25/"></script>
    <style>
        html, body, #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
        #popup-container {
            display: none;
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: white;
            border: 1px solid black;
            padding: 10px;
            z-index: 1000;
        }
        #search-container {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: white;
            padding: 10px;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <div id="viewDiv"></div>
    <div id="search-container">
        <input type="text" id="search-input" placeholder="Search...">
        <button id="search-button">Search</button>
    </div>
    <div id="popup-container"></div>
    <script>
        require([
            "esri/Map",
            "esri/views/MapView",
            "esri/layers/FeatureLayer",
            "esri/tasks/QueryTask",
            "esri/tasks/support/Query"
        ], function (Map, MapView, FeatureLayer, QueryTask, Query) {
            // Create the map
            const map = new Map({
                basemap: "topo-vector"
            });

            // Create the view
            const view = new MapView({
                container: "viewDiv",
                map: map,
                center: [-118.80500, 34.02700],
                zoom: 13
            });

            // Define the URL to the feature service
            /////////////////////const featureServiceUrl = "YOUR_FEATURE_SERVICE_URL";

            // Create a feature layer (optional, for visualization)
            const featureLayer = new FeatureLayer({
                url: featureServiceUrl
            });
            map.add(featureLayer);

            // Search functionality
            const searchButton = document.getElementById('search-button');
            const searchInput = document.getElementById('search-input');
            const popupContainer = document.getElementById('popup-container');

            searchButton.addEventListener('click', async () => {
                const searchTerm = searchInput.value;
                if (!searchTerm) return;

                const queryTask = new QueryTask({
                    url: featureServiceUrl
                });

                const query = new Query();
                ///////////query.where = `ATTRIBUTE_NAME LIKE '%${searchTerm}%'`; // Replace ATTRIBUTE_NAME with the actual attribute
                query.outFields = ["*"];
                query.returnGeometry = true;

                try {
                    const results = await queryTask.execute(query);
                    if (results.features.length > 0) {
                        const feature = results.features[0];
                        const attributes = feature.attributes;

                        view.goTo(feature.geometry);

                        // Display the popup
                        popupContainer.style.display = 'block';
                        popupContainer.innerHTML = Object.entries(attributes)
                            .map(([key, value]) => `<p><strong>${key}:</strong> ${value}</p>`)
                            .join('');
                    } else {
                        popupContainer.style.display = 'none';
                    }
                } catch (error) {
                    console.error("Search failed: ", error);
                }
            });
        });
    </script>
</body>
</html>
